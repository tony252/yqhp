version: '3'

services:
  nacos:
    image: nacos/nacos-server:1.4.2
    networks:
      - yqhp-network
    ports:
      - "8848:8848"
    environment:
      MODE: standalone

  zookeeper:
    image: 'bitnami/zookeeper:3.6'
    networks:
      - yqhp-network
    ports:
      - '2181:2181'
    volumes:
      - ./zookeeper:/bitnami/zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:3.4'
    networks:
      - yqhp-network
    ports:
      - '9094:9094' # 同一docker网络，客户端通过kafka:9092连接。外部客户端通过9094连接
    volumes:
      - ./kafka:/bitnami/kafka
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://127.0.0.1:9094 # 注意，其他主机要连kafka，需要把127.0.0.1修改为宿主机地址，其他主机通过宿主机地址:9094连接
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT

  redis:
    image: "bitnami/redis:6.2.10"
    networks:
      - yqhp-network
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/bitnami/redis/data
    environment:
      - REDIS_PASSWORD=yqhp@123..Aa88

  mysql:
    image: mysql/mysql-server:5.7
    networks:
      - yqhp-network
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: yqhp@123..Aa88
      MYSQL_ROOT_HOST: '%'

  minio:
    image: "bitnami/minio:2023.3.24"
    networks:
      - yqhp-network
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=yqhp@123..Aa88

  yqhp-web-ui:
    image: "yqhp-web-ui:latest"
    networks:
      - yqhp-network
    ports:
      - "80:80"
    environment:
      - GATEWAY_ENDPOINT=http://yqhp-gateway:18888
    depends_on:
      - yqhp-gateway

  yqhp-gateway:
    image: "yqhp-gateway:latest"
    networks:
      - yqhp-network
    ports:
      - "18888:18888"
    environment:
      - NACOS_ADDR=nacos:8848
      - NACOS_DISCOVERY_IP=127.0.0.1 # 该服务注册到nacos的ip，跨主机调用需要调整为宿主机ip
    restart: always
    depends_on:
      - nacos

  yqhp-auth:
    image: "yqhp-auth:latest"
    networks:
      - yqhp-network
    ports:
      - "8811:8811"
    environment:
      - NACOS_ADDR=nacos:8848
      - NACOS_DISCOVERY_IP=127.0.0.1 # 该服务注册到nacos的ip，跨主机调用需要调整为宿主机ip
      - AUTH_MYSQL_ADDR=mysql:3306
      - AUTH_MYSQL_USERNAME=root
      - AUTH_MYSQL_PWD=yqhp@123..Aa88
      - AUTH_REDIS_HOST=redis
      - AUTH_REDIS_PORT=6379
      - AUTH_REDIS_PWD=yqhp@123..Aa88
    restart: always
    depends_on:
      - nacos
      - mysql
      - redis

  yqhp-file:
    image: "yqhp-file:latest"
    networks:
      - yqhp-network
    ports:
      - "8866:8866"
    environment:
      - NACOS_ADDR=nacos:8848
      - NACOS_DISCOVERY_IP=127.0.0.1 # 该服务注册到nacos的ip，跨主机调用需要调整为宿主机ip
      - MINIO_PUBLIC_ENDPOINT=http://minio:9000 # 注意，MINIO_PUBLIC_ENDPOINT是文件上传后返回的下载地址前缀，需要调整为可用的地址，如:http://宿主机地址:9000
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_BUCKET=yqhp
      - MINIO_ACCESS_KEY=yqhp
      - MINIO_SECRET_KEY=yqhp@123..Aa88
    restart: always
    depends_on:
      - nacos
      - minio

  yqhp-console:
    image: "yqhp-console:latest"
    networks:
      - yqhp-network
    ports:
      - "8887:8887"
    environment:
      - NACOS_ADDR=nacos:8848
      - NACOS_DISCOVERY_IP=127.0.0.1 # 该服务注册到nacos的ip，跨主机调用需要调整为宿主机ip
      - CONSOLE_MYSQL_ADDR=mysql:3306
      - CONSOLE_MYSQL_USERNAME=root
      - CONSOLE_MYSQL_PWD=yqhp@123..Aa88
      - CONSOLE_REDIS_HOST=redis
      - CONSOLE_REDIS_PORT=6379
      - CONSOLE_REDIS_PWD=yqhp@123..Aa88
      - KAFKA_SERVERS=kafka:9092
      - ZK_ADDR=zookeeper:2181
    restart: always
    depends_on:
      - nacos
      - mysql
      - redis
      - kafka
      - zookeeper

networks:
  yqhp-network:
    driver: bridge